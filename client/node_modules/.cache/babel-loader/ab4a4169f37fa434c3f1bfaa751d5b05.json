{"ast":null,"code":"var _jsxFileName = \"Z:\\\\All\\\\Google Drive\\\\All\\\\School\\\\2022 Fall\\\\CIS4327 - Senior Project I\\\\MVC Bartender App\\\\why not start again\\\\client\\\\src\\\\Pages\\\\Dashboard.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport Swal from 'sweetalert2';\nimport OrderItem from '../Components/OrderItem';\n/**\r\n * Dashboard Page \r\n * @param {Function} param0 Get Logged In Token\r\n * @returns {React.Component}\r\n */\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Dashboard(_ref) {\n  _s();\n\n  let {\n    getToken\n  } = _ref;\n  const [backendData, setBackendData] = useState({});\n\n  function getOrder(token, id) {\n    fetch('/api/order', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        key: token,\n        id: id\n      })\n    }).then(response => response.json()).then(data => {\n      if (data.success === true) {\n        // Build View\n        const genProduct = _ref2 => {\n          let {\n            id,\n            name,\n            count\n          } = _ref2;\n          return `<li class='list-group-item list-group-item-action list-group-item-dark'>\n                    <div class=\"d-flex w-100 justify-content-between\">\n                        <h5 class=\"mb-1\">${id}. ${name}</h5>\n                        <small>${count} Order${count === 1 ? 's' : ''}</small>\n                    </div>\n                </li>`;\n        };\n\n        let html = '<ul class=\"list-group mb-3\">';\n        data.data.forEach(product => html += genProduct(product));\n        html += '</ul>';\n        Swal.fire({\n          title: `Order ${id}`,\n          customClass: 'swal-dark',\n          html: html //text: JSON.stringify(data.data)\n\n        });\n      } else {\n        Swal.fire({\n          title: 'Failed to Get Order',\n          icon: 'error',\n          customClass: 'swal-dark'\n        });\n      }\n    });\n  }\n\n  function updateOrder(token, id, state) {\n    fetch('/api/order', {\n      method: 'PUT',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        key: token,\n        id: id,\n        state: state\n      })\n    }).then(response => response.json()).then(data => data.success === true ? loadBackendData() : Swal.fire({\n      title: 'Failed to Update Order',\n      icon: 'error',\n      customClass: 'swal-dark'\n    }));\n  }\n\n  function loadBackendData() {\n    fetch('/api/orders', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        key: getToken()\n      })\n    }).then(response => response.json()).then(data => {\n      data.success === true ? setBackendData(data.data) : console.log('Error Loading Data');\n    });\n  }\n\n  useEffect(() => {\n    // Get Orders Data \n    loadBackendData();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"card text-bg-dark m-2 border-none\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"card-header text-center\",\n      children: /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Dashboard\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"card-body text-center\",\n      children: !Array.isArray(backendData) ? /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Loading... \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 21\n      }, this) : /*#__PURE__*/_jsxDEV(\"ul\", {\n        className: \"list-group mb-3\",\n        children: backendData.map(order => {\n          return /*#__PURE__*/_jsxDEV(OrderItem, {\n            order: order,\n            token: getToken,\n            getter: getOrder,\n            updater: updateOrder\n          }, order.id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 69,\n            columnNumber: 32\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 59,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Dashboard, \"HnQl/21DxYcNUSReLv/MMpJnblI=\");\n\n_c = Dashboard;\nexport default Dashboard;\n\nvar _c;\n\n$RefreshReg$(_c, \"Dashboard\");","map":{"version":3,"names":["React","useState","useEffect","Swal","OrderItem","Dashboard","getToken","backendData","setBackendData","getOrder","token","id","fetch","method","headers","body","JSON","stringify","key","then","response","json","data","success","genProduct","name","count","html","forEach","product","fire","title","customClass","icon","updateOrder","state","loadBackendData","console","log","Array","isArray","map","order"],"sources":["Z:/All/Google Drive/All/School/2022 Fall/CIS4327 - Senior Project I/MVC Bartender App/why not start again/client/src/Pages/Dashboard.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport Swal from 'sweetalert2';\r\nimport OrderItem from '../Components/OrderItem';\r\n\r\n/**\r\n * Dashboard Page \r\n * @param {Function} param0 Get Logged In Token\r\n * @returns {React.Component}\r\n */\r\nfunction Dashboard({ getToken }) {\r\n    const [ backendData, setBackendData ] = useState({})\r\n\r\n    function getOrder (token, id) {\r\n        fetch('/api/order', { method: 'POST', headers: { 'Content-Type': 'application/json' }, body: JSON.stringify({key: token, id: id}) })\r\n        .then( response => response.json())\r\n        .then( data => { \r\n            if(data.success === true) {\r\n                // Build View\r\n                const genProduct = ({id, name, count}) => \r\n                `<li class='list-group-item list-group-item-action list-group-item-dark'>\r\n                    <div class=\"d-flex w-100 justify-content-between\">\r\n                        <h5 class=\"mb-1\">${id}. ${name}</h5>\r\n                        <small>${count} Order${(count === 1)?'s':''}</small>\r\n                    </div>\r\n                </li>`;\r\n\r\n                let html = '<ul class=\"list-group mb-3\">';\r\n                data.data.forEach(product => html += genProduct(product))\r\n                html += '</ul>';\r\n                \r\n                Swal.fire({\r\n                    title: `Order ${id}`, customClass: 'swal-dark',\r\n                    html: html //text: JSON.stringify(data.data)\r\n                })\r\n            } else {\r\n                Swal.fire({title: 'Failed to Get Order', icon: 'error', customClass: 'swal-dark'})\r\n            }\r\n        });\r\n    }\r\n\r\n    function updateOrder (token, id, state) {\r\n        fetch('/api/order', { method: 'PUT', headers: { 'Content-Type': 'application/json' }, body: JSON.stringify({key: token, id: id, state: state}) })\r\n        .then( response => response.json() )\r\n        .then( data => (data.success === true) ? loadBackendData() : Swal.fire({title: 'Failed to Update Order', icon: 'error', customClass: 'swal-dark'}) );\r\n    }\r\n\r\n    function loadBackendData() {\r\n        fetch('/api/orders', { method: 'POST', headers: { 'Content-Type': 'application/json' }, body: JSON.stringify({key: getToken()}) })\r\n        .then( response => response.json())\r\n        .then( data => { (data.success === true) ? setBackendData(data.data) : console.log('Error Loading Data')});\r\n    }\r\n\r\n    useEffect(() => {\r\n        // Get Orders Data \r\n        loadBackendData();\r\n    }, [])\r\n\r\n    return (\r\n        <div className=\"card text-bg-dark m-2 border-none\">\r\n            <div className=\"card-header text-center\">\r\n                <h1>Dashboard</h1>\r\n            </div>\r\n            <div className=\"card-body text-center\">\r\n                {(!Array.isArray(backendData)) ? (\r\n                    <h2>Loading... </h2>\r\n                ):(\r\n                    <ul className=\"list-group mb-3\">\r\n                    {backendData.map(order => {\r\n                        return <OrderItem key={order.id} order={order} token={getToken} getter={getOrder} updater={updateOrder} />\r\n                    })}\r\n                    </ul>\r\n                )}\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Dashboard"],"mappings":"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"},"metadata":{},"sourceType":"module"}